{"mappings":"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","sources":["./src/scripts/utils.js","./src/scripts/drawUtils.js","./src/scripts/constants.js","./src/scripts/index.js"],"sourcesContent":["function newPoint(a, b) {\r\n  return (b - a) * Math.random() + a;\r\n}\r\n\r\nfunction linspace(startValue, stopValue, noElements) {\r\n  /* MATLAB's linspace is <3 */\r\n  var arr = [];\r\n  var step = (stopValue - startValue) / (noElements - 1);\r\n  for (var i = 0; i < noElements; i++) {\r\n    arr.push(startValue + step * i);\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction calcLine(x, x0, y0, tg) {\r\n  return x.map((i) => tg * (i - x0) + y0);\r\n}\r\n\r\nfunction solve(lat1, long1, hdg, step) {\r\n  let alpha;\r\n  /* If heading is 90 or 270, the tangent will be inf\r\n  If the heading is 0,180,360, the tangent is 0\r\n  We check each case\r\n  for the other cases, we just calculate alpha wrt heading\r\n  This function returns a LatLng object */\r\n\r\n  if (hdg === 0 || hdg === 180 || hdg === 360) {\r\n    lat1 = lat1 + Math.sign(Math.cos((hdg * Math.PI) / 180)) * step;\r\n    return new google.maps.LatLng(lat1, long1);\r\n  } else if (hdg === 90 || hdg === 270) {\r\n    long1 = long1 + Math.sign(Math.sin((hdg * Math.PI) / 180)) * step;\r\n    return new google.maps.LatLng(lat1, long1);\r\n  } else if (hdg < 90) {\r\n    alpha = hdg;\r\n  } else if (hdg < 180) {\r\n    alpha = hdg - 90;\r\n    lat1 =\r\n      lat1 +\r\n      Math.sign(Math.cos((hdg * Math.PI) / 180)) *\r\n        step *\r\n        Math.sin((alpha * Math.PI) / 180);\r\n    long1 =\r\n      long1 +\r\n      Math.sign(Math.sin((hdg * Math.PI) / 180)) *\r\n        step *\r\n        Math.cos((alpha * Math.PI) / 180);\r\n  } else if (hdg < 270) {\r\n    alpha = 270 - hdg;\r\n  } else if (hdg < 360) {\r\n    alpha = 360 - hdg;\r\n    lat1 =\r\n      lat1 +\r\n      Math.sign(Math.cos((hdg * Math.PI) / 180)) *\r\n        step *\r\n        Math.cos((alpha * Math.PI) / 180);\r\n    long1 =\r\n      long1 +\r\n      Math.sign(Math.sin((hdg * Math.PI) / 180)) *\r\n        step *\r\n        Math.sin((alpha * Math.PI) / 180);\r\n  }\r\n\r\n  return new google.maps.LatLng(lat1, long1);\r\n}\r\n\r\nexport { newPoint, linspace, calcLine, solve };\r\n","import { solve } from \"./utils.js\";\r\n\r\nexport class Sector {\r\n  /* This class generates sectors\r\n  Each sector has its own characteristics, like instantaneous capacity\r\n  name, currentCapacity, sector color and coordinates.\r\n  When initialized, the class Sector saves all the instances into a class object */\r\n\r\n  constructor(coords, map, capacity, name, pathColor) {\r\n    this.coords = coords;\r\n    this.map = map;\r\n    this.capacity = capacity;\r\n    this.name = name;\r\n    this.currentCapacity = 0;\r\n    this._display(pathColor);\r\n    this.color = pathColor;\r\n    this._create();\r\n    Sector.sectors[this.name] = { sector: this };\r\n  }\r\n\r\n  _create() {\r\n    // Initializes the class objects that saves all the class instances IF\r\n    // it has not been already initialized\r\n    if (!Sector.sectors) {\r\n      Sector.sectors = {};\r\n    }\r\n  }\r\n\r\n  _display(pathColor = \"#00FA00\", pathOpacity = 1.0, pathWeight = 2) {\r\n    // Draws the sector on the map\r\n    this.poly = new google.maps.Polygon({\r\n      map: this.map,\r\n      paths: this.coords,\r\n      strokeColor: pathColor,\r\n      strokeOpacity: pathOpacity,\r\n      strokeWeight: pathWeight,\r\n      fillColor: pathColor,\r\n      fillOpacity: 0.3,\r\n    });\r\n  }\r\n\r\n  setMap(map) {\r\n    /* Sets the map it is drawn on\r\n    Used when the sectors are redrawn after sectorization */\r\n    this.map = map;\r\n    this.poly.setMap(map);\r\n  }\r\n\r\n  checkCapacity() {\r\n    /* Checks if the capacity has been exceeded by more than 5%,\r\n    in which case, it emits alerts for the sector.\r\n    In case that the currentCapacity is less than the instantaneous\r\n    capacity, the alerts will be deleted */\r\n    if (this.currentCapacity >= 1.05 * this.capacity) {\r\n      if (!document.getElementById(\"alert\" + this.name)) {\r\n        let alerrt = document.createElement(\"h3\");\r\n        let node = document.createTextNode(\r\n          `${this.name} has reached maximum capacity!`\r\n        );\r\n        alerrt.appendChild(node);\r\n        alerrt.setAttribute(\"id\", \"alert\" + this.name);\r\n        alerrt.setAttribute(\"class\", \"alert\");\r\n        alerrt.style.color = \"red\";\r\n        alerrt.style.backgroundColor = this.color;\r\n        alerrt.style.textAlign = \"center\";\r\n        alerrt.style.margin = \"0\";\r\n        alerrt.style.padding = \"0\";\r\n        let div = document.querySelector(\".alert-section\");\r\n        div.appendChild(alerrt);\r\n      }\r\n    } else if (\r\n      this.currentCapacity < 1.05 * this.capacity &&\r\n      document.getElementById(\"alert\" + this.name)\r\n    ) {\r\n      let alerrt = document.getElementById(\"alert\" + this.name);\r\n      alerrt.innerHTML = \"\";\r\n      alerrt.remove();\r\n    }\r\n  }\r\n\r\n  checkPosition(obj) {\r\n    /* Checks the position of a flight. If a flight is present in this sector, then\r\n    the flight will save the name of the sector it currently belongs to */\r\n    if (\r\n      google.maps.geometry.poly.containsLocation(\r\n        obj.marker.getPosition(),\r\n        this.poly\r\n      ) &&\r\n      !obj.sector\r\n    ) {\r\n      obj.changeSector(this.name);\r\n    }\r\n  }\r\n}\r\n\r\nexport class Flight {\r\n  /* Generates \"flights\" that are flying according to a given heading, the \"speed\"\r\n  is defined by a given step. Each flight is initialized from a random point on\r\n  predefined initialization zones (lines) outside of the sectors.\r\n  The instances are saved in a class list upon creation in order to keep track of the \r\n  flights that are still or have left the area of interest.\r\n  - id is created in order to facilitate the elimination of flights that left the area of interest\r\n  - hdg gives the heading of the flight */\r\n\r\n  constructor(startpoint, hdg, map, step, icon) {\r\n    this.step = step;\r\n    this.map = map;\r\n    this.id = (new Date().getTime() * Math.random()).toString();\r\n    this.heading = hdg;\r\n    this.icon = icon;\r\n    this.sector = null;\r\n    this._create();\r\n    this._separate();\r\n    this.createMarker(startpoint);\r\n  }\r\n\r\n  changeSector(name) {\r\n    // Used to keep track of the sector the flight currently flies through\r\n    this.sector = name;\r\n  }\r\n\r\n  _create() {\r\n    /* Creates a class list for the flights that are going SE - NW\r\n    and another for flights going NW - SE*/\r\n    if (!Flight.counterUp) {\r\n      Flight.counterUp = [];\r\n    }\r\n    if (!Flight.counterDown) {\r\n      Flight.counterDown = [];\r\n    }\r\n  }\r\n\r\n  _separate() {\r\n    /* At initialization, separates the instances in flightsUp of flightsDown \r\n    It reduces the amount of time when deleting a flight */\r\n    if (this.heading > 270 && this.heading < 360) {\r\n      Flight.counterUp.push(this);\r\n    } else {\r\n      Flight.counterDown.push(this);\r\n    }\r\n  }\r\n\r\n  createMarker(point, title = \"None\") {\r\n    /* creates a new Marker object */\r\n    this.marker = new google.maps.Marker({\r\n      position: point,\r\n      map: this.map,\r\n      title: title,\r\n      icon: this.icon,\r\n    });\r\n  }\r\n\r\n  deleteFlight() {\r\n    this.marker.setMap(null);\r\n    if (this.heading > 270 && this.heading < 360) {\r\n      Flight.counterUp = Flight.counterUp.filter(\r\n        (flight) => flight.id !== this.id\r\n      );\r\n      // console.log(Flight.counterUp.length);\r\n    } else {\r\n      Flight.counterDown = Flight.counterDown.filter(\r\n        (flight) => flight.id !== this.id\r\n      );\r\n      // console.log(Flight.counterDown.length);\r\n    }\r\n  }\r\n\r\n  updatePos() {\r\n    //console.log(\"STARTING THE UPDATE\");\r\n    /* Updates the position of the marker;\r\n    if the marker exceeds a specified boundary, it is deleted.\r\n    The update is done every second. */\r\n    if (\r\n      this.marker.position.lat() < 44.55 ||\r\n      this.marker.position.lat() > 48.1 ||\r\n      this.marker.position.lng() < 21.2 ||\r\n      this.marker.position.lng() > 23.6\r\n    ) {\r\n      // console.log(`The flight ${this.id} has been eliminated`);\r\n      clearTimeout(this.timeout);\r\n      this.deleteFlight();\r\n      return true;\r\n    } else {\r\n      this.marker.setMap(null);\r\n      let point = solve(\r\n        this.marker.position.lat(),\r\n        this.marker.position.lng(),\r\n        this.heading,\r\n        this.step\r\n      );\r\n      this.createMarker(point);\r\n      this.timeout = setTimeout(() => this.updatePos(), 1000);\r\n    }\r\n  }\r\n}\r\n","import { linspace, calcLine } from \"./utils.js\";\r\n\r\nexport const colours = {\r\n  blue: \"#2980B9\",\r\n  red: \"#C70039\",\r\n  green: \"#229954\",\r\n  purple: \"#7D3C98\",\r\n  yellow: \"#F4D03F\",\r\n  orange: \"#E67E22\",\r\n  pink: \"#EF46EF\",\r\n  cyan: \"#46EBEF\",\r\n  darkGreen: \"#0B5345\",\r\n  darkBlue: \"#070BCC\",\r\n};\r\n\r\nconst X0_DOWN = 22.1;\r\nconst X0_UP = 22.65;\r\nconst Y0_DOWN = 47.5;\r\nconst Y0_UP = 44.65;\r\nconst TG_DOWN = 0.45;\r\nconst TG_UP = 0.45;\r\n\r\n/* MOPUG sector */\r\nexport const MOPUG = [\r\n  new google.maps.LatLng(46.416667, 21.294444),\r\n  new google.maps.LatLng(46.212222, 21.529167),\r\n  new google.maps.LatLng(45.731944, 22.498889),\r\n  new google.maps.LatLng(45.544444, 22.935278),\r\n  new google.maps.LatLng(45.415833, 22.965278),\r\n  new google.maps.LatLng(44.867222, 22.8475),\r\n  new google.maps.LatLng(44.652778, 22.552778),\r\n  new google.maps.LatLng(46.416667, 21.294444),\r\n];\r\n\r\n/* MOPUG subsectors */\r\nexport const MOPUG1 = [\r\n  new google.maps.LatLng(46.416667, 21.294444),\r\n  new google.maps.LatLng(46.212222, 21.529167),\r\n  new google.maps.LatLng(45.731944, 22.498889),\r\n  new google.maps.LatLng(45.544444, 22.935278),\r\n  new google.maps.LatLng(45.415833, 22.965278),\r\n  new google.maps.LatLng(45.5166, 21.9365),\r\n  new google.maps.LatLng(46.416667, 21.294444),\r\n];\r\n\r\nexport const MOPUG2 = [\r\n  new google.maps.LatLng(45.5166, 21.9365),\r\n  new google.maps.LatLng(45.415833, 22.965278),\r\n  new google.maps.LatLng(44.867222, 22.8475),\r\n  new google.maps.LatLng(44.652778, 22.552778),\r\n];\r\n\r\n/* BUDOP sector */\r\nexport const BUDOP = [\r\n  new google.maps.LatLng(48.016667, 23.1),\r\n  new google.maps.LatLng(47.694444, 23.160833),\r\n  new google.maps.LatLng(47.491389, 23.125),\r\n  new google.maps.LatLng(46.493055, 23.168889),\r\n  new google.maps.LatLng(46.259167, 23.508611),\r\n  new google.maps.LatLng(45.960278, 23.088056),\r\n  new google.maps.LatLng(45.745, 22.888333),\r\n  new google.maps.LatLng(45.544444, 22.935278),\r\n  new google.maps.LatLng(45.731944, 22.498888),\r\n  new google.maps.LatLng(46.212222, 21.529167),\r\n  new google.maps.LatLng(46.416667, 21.294444),\r\n  new google.maps.LatLng(48.016667, 23.1),\r\n];\r\n\r\n/* BUDOP subsectors */\r\nexport const BUDOP1 = [\r\n  new google.maps.LatLng(46.212222, 21.529167),\r\n  new google.maps.LatLng(46.416667, 21.294444),\r\n  new google.maps.LatLng(47.04043, 21.9983),\r\n  new google.maps.LatLng(46.493055, 23.168889),\r\n  new google.maps.LatLng(46.259167, 23.508611),\r\n  new google.maps.LatLng(45.960278, 23.088056),\r\n  new google.maps.LatLng(45.745, 22.888333),\r\n  new google.maps.LatLng(45.544444, 22.935278),\r\n  new google.maps.LatLng(45.731944, 22.498888),\r\n];\r\n\r\nexport const BUDOP2 = [\r\n  new google.maps.LatLng(47.04043, 21.9983),\r\n  new google.maps.LatLng(48.016667, 23.1),\r\n  new google.maps.LatLng(47.694444, 23.160833),\r\n  new google.maps.LatLng(47.491389, 23.125),\r\n  new google.maps.LatLng(47.05145, 23.14434),\r\n  new google.maps.LatLng(46.493055, 23.168889),\r\n];\r\n\r\nexport const BUDOP3 = [\r\n  new google.maps.LatLng(47.05145, 23.14434),\r\n  new google.maps.LatLng(47.20315, 22.18192),\r\n  new google.maps.LatLng(48.016667, 23.1),\r\n  new google.maps.LatLng(47.694444, 23.160833),\r\n  new google.maps.LatLng(47.491389, 23.125),\r\n  new google.maps.LatLng(46.493055, 23.168889),\r\n];\r\n\r\nexport const LONG_DOWN = linspace(22.1, 22.7, 7);\r\nexport const LONG_UP = linspace(22.65, 23.45, 7);\r\nexport const LAT_DOWN = calcLine(LONG_DOWN, X0_DOWN, Y0_DOWN, TG_DOWN);\r\nexport const LAT_UP = calcLine(LONG_UP, X0_UP, Y0_UP, TG_UP);\r\nexport const DOWN = [LONG_DOWN, LAT_DOWN];\r\nexport const UP = [LONG_UP, LAT_UP];\r\n\r\nexport const directionsUp = linspace(290, 350, 10);\r\nexport const directionsDown = linspace(120, 170, 10);\r\n\r\nexport const iconUp = {\r\n  url: \"http://earth.google.com/images/kml-icons/track-directional/track-14.png\",\r\n  scaledSize: new google.maps.Size(30, 30),\r\n};\r\nexport const iconDown = {\r\n  url: \"http://earth.google.com/images/kml-icons/track-directional/track-6.png\",\r\n  scaledSize: new google.maps.Size(30, 30),\r\n};\r\n","import { Sector, Flight } from \"./drawUtils.js\";\r\nimport * as constants from \"./constants.js\";\r\nimport { newPoint } from \"./utils.js\";\r\n\r\nconst noFlights = 5;\r\nlet simTimeoutUp;\r\nlet simTimeoutDown;\r\nlet countTimeout;\r\nlet counterMopug = 0;\r\nlet counterBudop = 0;\r\nlet map;\r\n\r\nlet elemMopug = document.getElementById(\"MOPUG\");\r\nlet elemBudop = document.getElementById(\"BUDOP\");\r\nlet elemNW = document.getElementById(\"UP\");\r\nlet elemSE = document.getElementById(\"DOWN\");\r\n\r\nconst myLatLng = new google.maps.LatLng(46.493055, 23.168889);\r\n\r\nfunction initMap() {\r\n  map = new google.maps.Map(document.getElementById(\"map\"), {\r\n    zoom: 7,\r\n    center: myLatLng,\r\n    styles: [\r\n      { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n      {\r\n        featureType: \"administrative.locality\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#d59563\" }],\r\n      },\r\n      {\r\n        featureType: \"poi\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#d59563\" }],\r\n      },\r\n      {\r\n        featureType: \"poi.park\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#263c3f\" }],\r\n      },\r\n      {\r\n        featureType: \"poi.park\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#6b9a76\" }],\r\n      },\r\n      {\r\n        featureType: \"road\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#38414e\" }],\r\n      },\r\n      {\r\n        featureType: \"road\",\r\n        elementType: \"geometry.stroke\",\r\n        stylers: [{ color: \"#212a37\" }],\r\n      },\r\n      {\r\n        featureType: \"road\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#9ca5b3\" }],\r\n      },\r\n      {\r\n        featureType: \"road.highway\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#746855\" }],\r\n      },\r\n      {\r\n        featureType: \"road.highway\",\r\n        elementType: \"geometry.stroke\",\r\n        stylers: [{ color: \"#1f2835\" }],\r\n      },\r\n      {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#f3d19c\" }],\r\n      },\r\n      {\r\n        featureType: \"transit\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#2f3948\" }],\r\n      },\r\n      {\r\n        featureType: \"transit.station\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#d59563\" }],\r\n      },\r\n      {\r\n        featureType: \"water\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#17263c\" }],\r\n      },\r\n      {\r\n        featureType: \"water\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#515c6d\" }],\r\n      },\r\n      {\r\n        featureType: \"water\",\r\n        elementType: \"labels.text.stroke\",\r\n        stylers: [{ color: \"#17263c\" }],\r\n      },\r\n    ],\r\n  });\r\n}\r\nwindow.init = initMap();\r\n\r\nlet Mopug = new Sector(\r\n  constants.MOPUG,\r\n  map,\r\n  18,\r\n  \"MOPUG\",\r\n  constants.colours.green\r\n);\r\nlet Mopug1 = new Sector(\r\n  constants.MOPUG1,\r\n  null,\r\n  14,\r\n  \"MOPUG1\",\r\n  constants.colours.blue\r\n);\r\nlet Mopug2 = new Sector(\r\n  constants.MOPUG2,\r\n  null,\r\n  14,\r\n  \"MOPUG2\",\r\n  constants.colours.yellow\r\n);\r\nlet Budop = new Sector(\r\n  constants.BUDOP,\r\n  map,\r\n  18,\r\n  \"BUDOP\",\r\n  constants.colours.purple\r\n);\r\nlet Budop1 = new Sector(\r\n  constants.BUDOP1,\r\n  null,\r\n  16,\r\n  \"BUDOP1\",\r\n  constants.colours.cyan\r\n);\r\nlet Budop2 = new Sector(\r\n  constants.BUDOP2,\r\n  null,\r\n  16,\r\n  \"BUDOP2\",\r\n  constants.colours.orange\r\n);\r\n\r\nfunction simulateUp() {\r\n  // Create n = (1 to noFlights) flights, with a random heading, at a random period of time\r\n  // The headings used here are predefined and they are in the direction SE => NW\r\n\r\n  let time = newPoint(4000, 10000);\r\n  let no_flights = newPoint(1, noFlights);\r\n  for (let i = 0; i < no_flights; i++) {\r\n    let index = Math.floor(newPoint(0, constants.UP[0].length));\r\n    let dir = Math.floor(newPoint(0, constants.directionsUp.length)); // direction / heading\r\n    let startpoint = new google.maps.LatLng(\r\n      constants.UP[1][index],\r\n      constants.UP[0][index]\r\n    );\r\n    let flight = new Flight(\r\n      startpoint,\r\n      constants.directionsUp[dir],\r\n      map,\r\n      0.1,\r\n      constants.iconUp\r\n    );\r\n    flight.updatePos();\r\n  }\r\n  elemNW.textContent = Flight.counterUp.length;\r\n  simTimeoutUp = setTimeout(simulateUp, time);\r\n}\r\n\r\nfunction simulateDown() {\r\n  // Create n = (1 to noFlights) flights, with a random heading, at a random period of time\r\n  // The headings used here are predefined and they are in the direction NW => SE\r\n\r\n  let time = newPoint(4000, 10000);\r\n  let no_flights = newPoint(1, noFlights);\r\n  for (let i = 0; i < no_flights; i++) {\r\n    let index = Math.floor(newPoint(0, constants.DOWN[0].length));\r\n    let dir = Math.floor(newPoint(0, constants.directionsDown.length));\r\n    let startpoint = new google.maps.LatLng(\r\n      constants.DOWN[1][index],\r\n      constants.DOWN[0][index]\r\n    );\r\n    let flight = new Flight(\r\n      startpoint,\r\n      constants.directionsDown[dir],\r\n      map,\r\n      0.1,\r\n      constants.iconDown\r\n    );\r\n    flight.updatePos();\r\n  }\r\n  elemSE.textContent = Flight.counterDown.length;\r\n  simTimeoutDown = setTimeout(simulateDown, time);\r\n}\r\n\r\nfunction checkMopug(no) {\r\n  /* no - the number of flights currently being present in Mopug\r\n  This function checks if the capacity of the sector has been exceeded\r\n  When exceeded, the big sector is split in two smaller subsectors\r\n  If for 5 iterations the capacity is under the sector capacity, then the\r\n  small subsectors are merged */\r\n\r\n  if (no > Mopug.capacity) {\r\n    Mopug.setMap(null);\r\n    Mopug1.setMap(map);\r\n    Mopug2.setMap(map);\r\n    counterMopug = 0;\r\n  } else if (!Mopug.map && no <= Mopug.capacity) {\r\n    counterMopug += 1;\r\n  }\r\n\r\n  if (counterMopug >= 5) {\r\n    Mopug.setMap(map);\r\n    Mopug1.setMap(null);\r\n    Mopug2.setMap(null);\r\n    counterMopug = 0;\r\n  }\r\n}\r\n\r\nfunction checkBudop(no) {\r\n  /* no - the number of flights currently being present in Budop\r\n  This function checks if the capacity of the sector has been exceeded\r\n  When exceeded, the big sector is split in two smaller subsectors\r\n  If for 5 iterations the capacity is under the sector capacity, then the\r\n  small subsectors are merged */\r\n\r\n  if (no > Budop.capacity) {\r\n    Budop1.setMap(map);\r\n    Budop2.setMap(map);\r\n    Budop.setMap(null);\r\n    counterBudop = 0;\r\n  } else if (!Budop.map && no <= Budop.capacity) {\r\n    counterBudop += 1;\r\n  }\r\n\r\n  if (counterBudop >= 5) {\r\n    Budop.setMap(map);\r\n    Budop1.setMap(null);\r\n    Budop2.setMap(null);\r\n    counterBudop = 0;\r\n  }\r\n}\r\n\r\nfunction split() {\r\n  // Checks the position of each flight instance existing\r\n  // and counts the total number of flights present in each sector.\r\n  // If the capacity is exceeded, the large sector is split.\r\n  // This function displays the current number of flights in each sector, refreshes\r\n  // the number of flights present in each sector.\r\n\r\n  let n_Mopug = 0;\r\n  let n_Budop = 0;\r\n  function count() {\r\n    for (let i = 0; i < Flight.counterUp.length; i++) {\r\n      let flight = Flight.counterUp[i];\r\n      Mopug1.checkPosition(flight);\r\n      Mopug2.checkPosition(flight);\r\n      Budop1.checkPosition(flight);\r\n      Budop2.checkPosition(flight);\r\n    }\r\n\r\n    for (let i = 0; i < Flight.counterDown.length; i++) {\r\n      let flight = Flight.counterDown[i];\r\n      Mopug1.checkPosition(flight);\r\n      Mopug2.checkPosition(flight);\r\n      Budop1.checkPosition(flight);\r\n      Budop2.checkPosition(flight);\r\n    }\r\n\r\n    let flights = [...Flight.counterUp, ...Flight.counterDown];\r\n\r\n    for (let i = 0; i < flights.length; i++) {\r\n      if ([Mopug1.name, Mopug2.name].includes(flights[i].sector)) {\r\n        n_Mopug += 1;\r\n      } else if ([Budop1.name, Budop2.name].includes(flights[i].sector)) {\r\n        n_Budop += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  count();\r\n  checkMopug(n_Mopug);\r\n  checkBudop(n_Budop);\r\n  Mopug.currentCapacity = n_Mopug;\r\n  Budop.currentCapacity = n_Budop;\r\n  elemMopug.textContent = Mopug.currentCapacity;\r\n  elemBudop.textContent = Budop.currentCapacity;\r\n  Mopug.checkCapacity();\r\n  Budop.checkCapacity();\r\n  countTimeout = setTimeout(split, 1000);\r\n}\r\n\r\nfunction callback(e) {\r\n  // This function starts the simulation, which is comprised of\r\n  // the flight initializations and the capacity check + split, if the capacity is exceeded\r\n  simulateUp();\r\n  simulateDown();\r\n  split();\r\n  e.currentTarget.setAttribute(\"disabled\", \"\");\r\n  const stop = document.querySelector(\".sim-stop\");\r\n  if (stop.hasAttribute(\"disabled\")) {\r\n    stop.removeAttribute(\"disabled\");\r\n  }\r\n}\r\n\r\nfunction stopCallback(e) {\r\n  // This function stops the simulation and resets the map, deletes the flight instances\r\n  // and resets all the data displayed about the flights.\r\n\r\n  clearTimeout(simTimeoutUp);\r\n  clearTimeout(simTimeoutDown);\r\n  clearTimeout(countTimeout);\r\n\r\n  Flight.counterUp.forEach((item) => {\r\n    item.marker.setMap(null);\r\n    clearTimeout(item.timeout);\r\n  });\r\n  Flight.counterDown.forEach((item) => {\r\n    item.marker.setMap(null);\r\n    clearTimeout(item.timeout);\r\n  });\r\n  Flight.counterUp = [];\r\n  Flight.counterDown = [];\r\n\r\n  elemMopug.textContent = 0;\r\n  elemBudop.textContent = 0;\r\n  elemNW.textContent = 0;\r\n  elemSE.textContent = 0;\r\n\r\n  Mopug.setMap(map);\r\n  Mopug.currentCapacity = 0;\r\n  Mopug1.setMap(null);\r\n  Mopug2.setMap(null);\r\n\r\n  Budop.setMap(map);\r\n  Budop.currentCapacity = 0;\r\n  Budop1.setMap(null);\r\n  Budop2.setMap(null);\r\n\r\n  e.currentTarget.setAttribute(\"disabled\", \"\");\r\n  const start = e.currentTarget.parentElement.querySelector(\".sim-start\");\r\n  if (start.hasAttribute(\"disabled\")) {\r\n    start.removeAttribute(\"disabled\");\r\n  }\r\n  const alerts = document.querySelector(\".alert-section\");\r\n  const children = alerts.querySelectorAll(\".alert\");\r\n  children.forEach((child) => {\r\n    alerts.removeChild(child);\r\n  });\r\n}\r\n\r\ndocument.querySelector(\".sim-start\").addEventListener(\"click\", callback);\r\ndocument.querySelector(\".sim-stop\").addEventListener(\"click\", stopCallback);\r\ndocument.querySelector(\".start\").addEventListener(\"click\", (e) => {\r\n  window.location.href = \"#sim-map\";\r\n  callback(e);\r\n  document.querySelector(\".sim-start\").setAttribute(\"disabled\", \"\");\r\n});\r\n"],"names":["$a4305b3067e022796b52bb36a9d4c5da$export$newPoint","a","b","Math","random","$a4305b3067e022796b52bb36a9d4c5da$export$linspace","startValue","stopValue","noElements","arr","step","i","push","$a4305b3067e022796b52bb36a9d4c5da$export$calcLine","x","x0","y0","tg","map","$ab4f3da3850a82060c61a870e275325b$export$Sector","constructor","coords","capacity","name","pathColor","this","currentCapacity","_display","color","_create","sectors","sector","pathOpacity","pathWeight","poly","google","maps","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","setMap","checkCapacity","document","getElementById","alerrt","createElement","node","createTextNode","appendChild","setAttribute","style","backgroundColor","textAlign","margin","padding","querySelector","innerHTML","remove","checkPosition","obj","geometry","containsLocation","marker","getPosition","changeSector","$ab4f3da3850a82060c61a870e275325b$export$Flight","startpoint","hdg","icon","id","Date","getTime","toString","heading","_separate","createMarker","counterUp","counterDown","point","title","Marker","position","deleteFlight","filter","flight","updatePos","lat","lng","clearTimeout","timeout","lat1","long1","alpha","sign","cos","PI","LatLng","sin","setTimeout","$afefed49a02fd5767f01c2251f35a837$export$colours","$afefed49a02fd5767f01c2251f35a837$export$MOPUG","$afefed49a02fd5767f01c2251f35a837$export$MOPUG1","$afefed49a02fd5767f01c2251f35a837$export$MOPUG2","$afefed49a02fd5767f01c2251f35a837$export$BUDOP","$afefed49a02fd5767f01c2251f35a837$export$BUDOP1","$afefed49a02fd5767f01c2251f35a837$export$BUDOP2","$afefed49a02fd5767f01c2251f35a837$export$LONG_DOWN","$afefed49a02fd5767f01c2251f35a837$export$BUDOP3","$afefed49a02fd5767f01c2251f35a837$export$LONG_UP","$afefed49a02fd5767f01c2251f35a837$export$LAT_DOWN","$afefed49a02fd5767f01c2251f35a837$export$LAT_UP","$afefed49a02fd5767f01c2251f35a837$export$DOWN","$afefed49a02fd5767f01c2251f35a837$export$UP","$afefed49a02fd5767f01c2251f35a837$export$directionsUp","$afefed49a02fd5767f01c2251f35a837$export$directionsDown","$afefed49a02fd5767f01c2251f35a837$export$iconUp","url","scaledSize","Size","$afefed49a02fd5767f01c2251f35a837$export$iconDown","$f6ae0174a4f2963aa471d89d77df1fb5$var$simTimeoutUp","$f6ae0174a4f2963aa471d89d77df1fb5$var$simTimeoutDown","$f6ae0174a4f2963aa471d89d77df1fb5$var$countTimeout","$f6ae0174a4f2963aa471d89d77df1fb5$var$map","$f6ae0174a4f2963aa471d89d77df1fb5$var$counterMopug","$f6ae0174a4f2963aa471d89d77df1fb5$var$counterBudop","$f6ae0174a4f2963aa471d89d77df1fb5$var$elemMopug","$f6ae0174a4f2963aa471d89d77df1fb5$var$elemBudop","$f6ae0174a4f2963aa471d89d77df1fb5$var$elemNW","$f6ae0174a4f2963aa471d89d77df1fb5$var$elemSE","$f6ae0174a4f2963aa471d89d77df1fb5$var$myLatLng","window","init","Map","zoom","center","styles","elementType","stylers","featureType","$f6ae0174a4f2963aa471d89d77df1fb5$var$Mopug","$f6ae0174a4f2963aa471d89d77df1fb5$var$Mopug1","$f6ae0174a4f2963aa471d89d77df1fb5$var$Mopug2","$f6ae0174a4f2963aa471d89d77df1fb5$var$Budop","$f6ae0174a4f2963aa471d89d77df1fb5$var$Budop1","$f6ae0174a4f2963aa471d89d77df1fb5$var$Budop2","$f6ae0174a4f2963aa471d89d77df1fb5$var$simulateUp","time","no_flights","index","floor","length","dir","textContent","$f6ae0174a4f2963aa471d89d77df1fb5$var$simulateDown","$f6ae0174a4f2963aa471d89d77df1fb5$var$split","n_Mopug","n_Budop","no","flights","includes","count","$f6ae0174a4f2963aa471d89d77df1fb5$var$checkBudop","$f6ae0174a4f2963aa471d89d77df1fb5$var$callback","e","currentTarget","stop","hasAttribute","removeAttribute","addEventListener","forEach","item","start","parentElement","alerts","querySelectorAll","child","removeChild","location","href"],"version":3,"file":"index.c0c7c8f1.js.map"}